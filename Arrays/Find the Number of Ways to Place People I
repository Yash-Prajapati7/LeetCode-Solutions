Leetcode Question : [Find the Number of Ways to Place People I](https://leetcode.com/problems/find-the-number-of-ways-to-place-people-i/)

### Java

```java
class Solution {
    public int numberOfPairs(int[][] points) {
        int n = points.length;
        int ans = 0;

        // Sort by x ascending, then y descending
        Arrays.sort(points, (a, b) -> {
            if (a[0] == b[0])
                return b[1] - a[1];
            return a[0] - b[0];
        });

        for (int j = n - 1; j >= 0; j--) {
            int x2 = points[j][0];
            int y2 = points[j][1];
            int max = Integer.MAX_VALUE;

            for (int i = j - 1; i >= 0; i--) {
                int x1 = points[i][0];
                int y1 = points[i][1];
                if (y1 < max && y1 >= y2) {
                    max = y1;
                    ans++;
                }
            }
        }

        return ans;
    }
}
```

### C++

```cpp
#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int numberOfPairs(vector<vector<int>>& points) {
        int n = points.size();
        int ans = 0;

        // Sort by x ascending, then y descending
        sort(points.begin(), points.end(), [](const vector<int>& a, const vector<int>& b) {
            if (a[0] == b[0]) return a[1] > b[1];
            return a[0] < b[0];
        });

        for (int j = n - 1; j >= 0; j--) {
            int x2 = points[j][0];
            int y2 = points[j][1];
            int maxy = INT_MAX;

            for (int i = j - 1; i >= 0; i--) {
                int x1 = points[i][0];
                int y1 = points[i][1];
                if (y1 < maxy && y1 >= y2) {
                    maxy = y1;
                    ans++;
                }
            }
        }

        return ans;
    }
};
```
